{"version":3,"sources":["webpack:///./services/movies-api.js","webpack:///./initFilmPage.js","webpack:///./mainPage.js","webpack:///./initWatched.js","webpack:///./initHeader.js","webpack:///./index.js"],"names":["axios","defaults","baseURL","key","fetchMoviesById","id","get","then","data","poster_path","backdrop_path","release_date","slice","initMoviePage","movie","currentMovie","document","querySelector","style","display","watchedFilms","localStorage","getItem","JSON","parse","setItem","isFilmInWatched","some","item","innerHTML","title","vote_average","vote_count","popularity","original_title","overview","genres","name","results","fetchMovieTrailer","insertAdjacentHTML","reduce","acc","genresList","getMoviePage","watched","classList","remove","add","textContent","addEventListener","e","PNotify","success","text","delay","filteredList","filter","stringify","push","initMainPage","app","page","query","refs","moviesList","buttonNext","buttonPrev","paginationBoxInfo","input","getTrendingMovies","url","response","forEach","console","log","API","films","catch","err","getMoviesByQuery","target","value","handleChange","closest","filmId","dataset","initWatched","length","getWatchedMovies","initHeader"],"mappings":"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","file":"main.daf14b91c98d64c1225c.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\r\n\r\nconst key = \"684a168c8e7f797395d8a1d5291bcabb\";\r\n\r\nexport const fetchTrendingMovies = (page = 1) => {\r\n  const url = `/3/discover/movie?sort_by=popularity.desc&api_key=${key}&perPage=2language=en-US&page=${page}&&include_adult=false&total_results=12&total_pages=10`;\r\n  // const url = `/3/trending/all/day?api_key=${key}&language=en-US&page=${page}`;\r\n  return axios.get(url).then(response => {\r\n    response.data.results.forEach(item => {\r\n      item.backdrop_path =\r\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\r\n    });\r\n    console.log(response.data.results[0]);\r\n    return response.data.results;\r\n  });\r\n};\r\n\r\nexport const fetchMovieByQuery = (query, page = 1) => {\r\n  const url = `/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}&include_adult=false`;\r\n  return axios.get(url).then(response => {\r\n    response.data.results.forEach(item => {\r\n      item.backdrop_path =\r\n        \"https://image.tmdb.org/t/p/w500\" + item.backdrop_path;\r\n    });\r\n    return response.data.results;\r\n  });\r\n};\r\n\r\nexport const fetchMoviesById = id => {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}`)\r\n    .then(data => {\r\n      data.data.poster_path =\r\n        \"https://image.tmdb.org/t/p/w500\" + data.data.poster_path;\r\n      data.data.backdrop_path =\r\n        \"https://image.tmdb.org/t/p/w500\" + data.data.backdrop_path;\r\n      data.data.release_date = data.data.release_date.slice(0, 4);\r\n      return data.data;\r\n    });\r\n};\r\n\r\nexport const fetchMovieTrailer = id => {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${key}`)\r\n    .then(data => data.data.results[0].key);\r\n};\r\n","import { fetchMovieTrailer } from \"./services/movies-api\";\r\n// import PNotify from \"node_modules/pnotify/dist/es/PNotify.js\";\r\nimport PNotify from \"pnotify/dist/es/PNotify.js\";\r\nimport \"pnotify/dist/PNotifyBrightTheme.css\";\r\n// import \"pnotify/dist/PNotifyBrightTheme.css\";\r\n\r\nconst initMoviePage = movie => {\r\n  const currentMovie = movie;\r\n\r\n  const getMoviePage = () => {\r\n    const {\r\n      poster_path,\r\n      title,\r\n      vote_average,\r\n      vote_count,\r\n      popularity,\r\n      original_title,\r\n      overview,\r\n      genres,\r\n      id,\r\n      name,\r\n      release_date\r\n    } = movie;\r\n\r\n    const genresList = genres => {\r\n      return genres.reduce((acc, item) => {\r\n        return (acc += `<li class=\"genre-list--item\"><span>${item.name}</span></li>\\n`);\r\n      }, \"\");\r\n    };\r\n\r\n    const getMovieTrailer = () => {\r\n      fetchMovieTrailer(id).then(data => {\r\n        document.querySelector(\".js-main\").insertAdjacentHTML(\r\n          \"afterbegin\",\r\n          `\r\n            <iframe class=\"movie-trailer\" src=\"https://www.youtube.com/embed/${data}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\r\n        `\r\n        );\r\n      });\r\n    };\r\n    getMovieTrailer();\r\n\r\n    return `\r\n    <div class=\"container\">\r\n\r\n    <section class=\"section\" data-id=\"{id}\">\r\n\r\n      <div class=\"poster-wrapper\">\r\n        <img class=\"film-poster\" src=\"${poster_path}\" alt=\"poster image\" />\r\n      </div>\r\n      <div class=\"description-wrapper\">\r\n      <h2 class=\"film-title\">${title || name}</h2>\r\n      <div class=\"release-year-wrapper\">\r\n      <span class=\"release-year\">year: ${release_date}</span>\r\n      </div>\r\n      <div class=\"vote-wrapper\">\r\n        <span class=\"titles vote-titles\">vote / votes: </span>\r\n        <span class=\"votes-numbers\">${vote_average} / ${vote_count}</span>\r\n      </div>\r\n      <div class=\"popularity-wrapper\">\r\n        <span class=\"titles film-popularity\">popularity: </span>\r\n        <span class=\"popularity-score\">${popularity}</span>\r\n      </div>\r\n      <div class=\"original-film-wrapper\">\r\n        <span class=\"titles original-film-titles\">original title: </span>\r\n        <span class=\"original-film-name\">${original_title}</span>\r\n      </div>\r\n      <div class=\"film-genre-wrapper\">\r\n        <span class=\"titles film-genre\">genre: </span>\r\n        <ul class=\"genre-list\">${genresList(genres)}</ul>\r\n      </div>\r\n      <h3 class=\"about-movie\">About</h3>\r\n      <p class=\"film-description\">\r\n        ${overview}\r\n      </p>\r\n      <div class=\"button-wrapper\">\r\n        <button type=\"button\" class=\"button js-add-to-watched js-film-icon video-icon button-icon\" data-id=\"${id}\" data-action=\"watched-films\">Add to Library\r\n      </div>\r\n    </section>\r\n    </div>\r\n    `;\r\n  };\r\n  document.querySelector(\".searchWebsite\").style.display = \"none\";\r\n  let watchedFilms = localStorage.getItem(\"watched\");\r\n\r\n  if (!watchedFilms) {\r\n    watchedFilms = [];\r\n  } else {\r\n    watchedFilms = JSON.parse(watchedFilms);\r\n  }\r\n\r\n  if (!watchedFilms) {\r\n    localStorage.setItem(\"watched\", []);\r\n    watchedFilms = [];\r\n  }\r\n  let isFilmInWatched = watchedFilms.some(item => {\r\n    return item.id === currentMovie.id;\r\n  });\r\n  // MOVIE PAGE RENDER HERE\r\n  document.querySelector(\".js-main\").innerHTML = getMoviePage();\r\n  //\r\n  const watched = document.querySelector(\".js-film-icon\");\r\n  if (isFilmInWatched) {\r\n    watched.classList.remove(\"video-icon\");\r\n    watched.classList.add(\"video-icon-remove\");\r\n    watched.textContent = \"Remove from library\";\r\n  }\r\n  document.querySelector(\".js-add-to-watched \").addEventListener(\"click\", e => {\r\n    if (!isFilmInWatched) {\r\n      watchedFilms.push(currentMovie);\r\n      localStorage.setItem(\"watched\", JSON.stringify(watchedFilms));\r\n      watched.classList.remove(\"video-icon\");\r\n      watched.classList.add(\"video-icon-remove\");\r\n      watched.textContent = \"Remove from library\";\r\n      isFilmInWatched = true;\r\n      PNotify.success({\r\n        text: \"The movie has been added to the Library\",\r\n        delay: 500\r\n      });\r\n    } else {\r\n      watched.classList.add(\"video-icon\");\r\n      watched.classList.remove(\"video-icon-remove\");\r\n      watched.textContent = \"Add to library\";\r\n      isFilmInWatched = false;\r\n      PNotify.success({\r\n        text: \"The movie has been removed from the Library\",\r\n        delay: 500\r\n      });\r\n      // console.log(\"watched\");\r\n      const filteredList = watchedFilms.filter(item => {\r\n        return item.id !== currentMovie.id;\r\n      });\r\n      localStorage.setItem(\"watched\", JSON.stringify(filteredList));\r\n      watchedFilms = filteredList;\r\n    }\r\n  });\r\n\r\n  //   const addToWatch = function(event) {\r\n  //     if (event.target.classList.contains(\"video-icon\")) {\r\n  //       event.target.classList.remove(\"video-icon\");\r\n  //       event.target.classList.add(\"video-icon-remove\");\r\n  //       event.target.textContent = \"Remove from library\";\r\n  //     } else {\r\n  //       event.target.classList.add(\"video-icon\");\r\n  //       event.target.classList.remove(\"video-icon-remove\");\r\n  //       event.target.textContent = \"Add to library\";\r\n  //     }\r\n  //   };\r\n\r\n  //   watched.addEventListener(\"click\", addToWatch);\r\n};\r\n\r\nexport default initMoviePage;\r\n","import * as API from \"./services/movies-api\";\r\nimport initMoviePage from \"./initFilmPage\";\r\n// import Layout from \"./Layout\";\r\nconst initMainPage = () => {\r\n  document.querySelector(\".searchWebsite\").style.display = \"block\";\r\n  document.querySelector(\".js-main\").innerHTML = `\r\n  <div class=\"container\">\r\n    <h1 class=\"main-header\">Trending now</h1>\r\n    <ul class=\"movies-list\" id=\"movies-list\"></ul>\r\n    <div class=\"pagination-box\">\r\n      <button class=\"pagination-box-button prev\">Prev</button>\r\n      <span class=\"pagination-box-info\"></span>\r\n      <button class=\"pagination-box-button next\">Next</button>\r\n    </div>\r\n    </div>\r\n    `;\r\n  const app = {\r\n    page: 1,\r\n    query: \"\"\r\n  };\r\n  const refs = {\r\n    moviesList: document.querySelector(\"#movies-list\"),\r\n    buttonNext: document.querySelector(\".next\"),\r\n    buttonPrev: document.querySelector(\".prev\"),\r\n    paginationBoxInfo: document.querySelector(\".pagination-box-info\"),\r\n    input: document.querySelector(\".js-search-input\"),\r\n    moviesList: document.querySelector(\".movies-list\")\r\n  };\r\n\r\n  const getTrendingMovies = (page = app.page) => {\r\n    page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\r\n    API.fetchTrendingMovies(page)\r\n      .then(data => {\r\n        const films = data.reduce((acc, item) => {\r\n          const { id, backdrop_path, title, name } = item;\r\n          return (acc += `\r\n          <li data-id=\"${id}\" class=\"movie\">\r\n            <img class=\"poster\" src=\"${backdrop_path}\" />\r\n            <h2 class=\"movie-title\">${title || name}</h2>\r\n            <div class=\"inner\"></div>\r\n            </li>\r\n          `);\r\n        }, \"\");\r\n\r\n        // .insertAdjacentHTML(\"beforeend\", films);\r\n        document.querySelector(\"#movies-list\").innerHTML = films;\r\n      })\r\n      .catch(err => console.log(err));\r\n    refs.paginationBoxInfo.textContent = page;\r\n  };\r\n  getTrendingMovies();\r\n\r\n  const handleNext = () => {\r\n    app.page = app.page + 1;\r\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\r\n    if (app.query) {\r\n      getMoviesByQuery(app.query);\r\n      return;\r\n    }\r\n\r\n    getTrendingMovies(app.page);\r\n  };\r\n  const handlePrev = () => {\r\n    app.page = app.page - 1;\r\n    refs.buttonPrev.classList.remove(\"hiddenButton\");\r\n    app.page === 1 ? refs.buttonPrev.classList.add(\"hiddenButton\") : null;\r\n    if (app.query) {\r\n      getMoviesByQuery(app.query);\r\n      return;\r\n    }\r\n    getTrendingMovies(app.page);\r\n  };\r\n\r\n  refs.buttonNext.addEventListener(\"click\", handleNext);\r\n  refs.buttonPrev.addEventListener(\"click\", handlePrev);\r\n\r\n  const getMoviesByQuery = query => {\r\n    API.fetchMovieByQuery(query, app.page).then(data => {\r\n      const films = data.reduce((acc, item) => {\r\n        const { id, backdrop_path, title } = item;\r\n        return (acc += `\r\n            <li data-id=\"${id}\" class=\"movie\">\r\n              <img class=\"poster\" src=\"${backdrop_path}\" />\r\n              <h2 class=\"movie-title\">${title}</h2>\r\n              <div class=\"inner\"></div>\r\n              </li>\r\n            `);\r\n      }, \"\");\r\n      // .insertAdjacentHTML(\"beforeend\", films);\r\n      document.querySelector(\"#movies-list\").innerHTML = films;\r\n    });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    app.query = e.target.value;\r\n    if (!app.query) {\r\n      getTrendingMovies(1);\r\n      return;\r\n    }\r\n    getMoviesByQuery(app.query);\r\n  };\r\n  refs.input.addEventListener(\"keyup\", e => {\r\n    handleChange(e);\r\n  });\r\n\r\n  refs.moviesList.addEventListener(\"click\", e => {\r\n    if (e.target.closest(\".movie\")) {\r\n      let filmId = e.target.closest(\".movie\").dataset.id;\r\n      API.fetchMoviesById(filmId).then(data => {\r\n        initMoviePage(data);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default initMainPage;\r\n","import { fetchMoviesById } from \"./services/movies-api\";\r\nimport initMoviePage from \"./initFilmPage\";\r\n\r\nconst initWatched = () => {\r\n  document.querySelector(\".js-main\").innerHTML = `\r\n  <div class=\"container\">\r\n  <ul class=\"movies-list\" id=\"movies-list\"></ul>\r\n  </div>\r\n  `;\r\n  const getWatchedMovies = () => {\r\n    let watchedFilms = localStorage.getItem(\"watched\");\r\n\r\n    if (!watchedFilms) {\r\n      watchedFilms = [];\r\n    } else {\r\n      watchedFilms = JSON.parse(watchedFilms);\r\n    }\r\n    if (!watchedFilms) {\r\n      localStorage.setItem(\"watched\", []);\r\n      watchedFilms = [];\r\n    }\r\n\r\n    const films = watchedFilms.reduce((acc, item) => {\r\n      const { id, backdrop_path, title } = item;\r\n      return (acc += `\r\n          <li data-id=\"${id}\" class=\"movie\">\r\n            <img class=\"poster\" src=\"${backdrop_path}\" />\r\n            <h2 class=\"movie-title\">${title}</h2>\r\n            <div class=\"inner\"></div>\r\n            </li>\r\n          `);\r\n    }, \"\");\r\n\r\n    // .insertAdjacentHTML(\"beforeend\", films);\r\n    document.querySelector(\".searchWebsite\").style.display = \"none\";\r\n    document.querySelector(\"#movies-list\").style =\r\n      \"padding-top:100px;padding-bottom:70px;\";\r\n\r\n    if (watchedFilms.length !== 0) {\r\n      document.querySelector(\"#movies-list\").innerHTML = films;\r\n    } else {\r\n      document.querySelector(\r\n        \".js-main .container\"\r\n      ).innerHTML = `<p class=\"empty\">Your Library is empty</p>`;\r\n      document.querySelector(\".js-main .container\").style =\r\n        \"display:flex;justify-content:center;align-items:center;flex: 1 1 auto;\";\r\n    }\r\n\r\n    document.querySelector(\"#movies-list\").addEventListener(\"click\", e => {\r\n      if (e.target.closest(\".movie\")) {\r\n        let filmId = e.target.closest(\".movie\").dataset.id;\r\n        fetchMoviesById(filmId).then(data => {\r\n          initMoviePage(data);\r\n        });\r\n      }\r\n    });\r\n  };\r\n  getWatchedMovies();\r\n};\r\n\r\nexport default initWatched;\r\n","import initMainPage from \"./mainPage\";\r\nimport initWatched from \"./initWatched\";\r\nconst initHeader = () => {\r\n  document\r\n    .querySelector(\".logo-website\")\r\n    .addEventListener(\"click\", initMainPage);\r\n  document.querySelector(\".js-home\").addEventListener(\"click\", initMainPage);\r\n  document.querySelector(\".js-watched\").addEventListener(\"click\", initWatched);\r\n};\r\n\r\nexport default initHeader;\r\n","import \"./styles.css\";\r\nimport \"./mainPage\";\r\nimport initMainPage from \"./mainPage\";\r\nimport initMoviePage from \"./initFilmPage\";\r\nimport initHeader from \"./initHeader\";\r\ninitHeader();\r\ninitMainPage();\r\n"],"sourceRoot":""}